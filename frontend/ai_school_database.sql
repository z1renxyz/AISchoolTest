-- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è AI School
-- –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ –æ–±—É—á–µ–Ω–∏—è –ò–ò

-- 1. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∞–¥–∞–ø—Ç–∏—Ä—É–µ–º profiles)
CREATE TABLE IF NOT EXISTS public.users (
    id UUID REFERENCES auth.users(id) PRIMARY KEY,
    email TEXT UNIQUE NOT NULL,
    full_name TEXT,
    avatar_url TEXT,
    role TEXT DEFAULT 'user' CHECK (role IN ('user', 'admin')),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Ç–µ–º (topics)
CREATE TABLE IF NOT EXISTS public.topics (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    title TEXT NOT NULL,
    description TEXT,
    icon TEXT,
    color TEXT DEFAULT '#3B82F6',
    order_index INTEGER DEFAULT 0,
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 3. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ–¥—Ç–µ–º (subtopics)
CREATE TABLE IF NOT EXISTS public.subtopics (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    topic_id UUID REFERENCES public.topics(id) ON DELETE CASCADE,
    title TEXT NOT NULL,
    content TEXT,
    order_index INTEGER DEFAULT 0,
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 4. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
CREATE TABLE IF NOT EXISTS public.user_progress (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id UUID REFERENCES public.users(id) ON DELETE CASCADE,
    subtopic_id UUID REFERENCES public.subtopics(id) ON DELETE CASCADE,
    is_completed BOOLEAN DEFAULT false,
    completed_at TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    UNIQUE(user_id, subtopic_id)
);

-- 5. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
CREATE TABLE IF NOT EXISTS public.user_favorites (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id UUID REFERENCES public.users(id) ON DELETE CASCADE,
    subtopic_id UUID REFERENCES public.subtopics(id) ON DELETE CASCADE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    UNIQUE(user_id, subtopic_id)
);

-- 6. –í–∫–ª—é—á–∞–µ–º RLS
ALTER TABLE public.users ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.topics ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.subtopics ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.user_progress ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.user_favorites ENABLE ROW LEVEL SECURITY;

-- 7. –°–æ–∑–¥–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏ RLS

-- –ü–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è users
CREATE POLICY "Users can view own profile" ON public.users
    FOR SELECT USING (auth.uid() = id);

CREATE POLICY "Users can update own profile" ON public.users
    FOR UPDATE USING (auth.uid() = id);

CREATE POLICY "Users can insert own profile" ON public.users
    FOR INSERT WITH CHECK (auth.uid() = id);

-- –ê–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –≤–∏–¥–µ—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
CREATE POLICY "Admins can view all users" ON public.users
    FOR SELECT USING (
        EXISTS (
            SELECT 1 FROM public.users 
            WHERE id = auth.uid() AND role = 'admin'
        )
    );

-- –ü–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è topics (–≤—Å–µ –º–æ–≥—É—Ç —á–∏—Ç–∞—Ç—å)
CREATE POLICY "Anyone can view topics" ON public.topics
    FOR SELECT USING (true);

-- –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å —Ç–µ–º—ã
CREATE POLICY "Admins can manage topics" ON public.topics
    FOR ALL USING (
        EXISTS (
            SELECT 1 FROM public.users 
            WHERE id = auth.uid() AND role = 'admin'
        )
    );

-- –ü–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è subtopics (–≤—Å–µ –º–æ–≥—É—Ç —á–∏—Ç–∞—Ç—å)
CREATE POLICY "Anyone can view subtopics" ON public.subtopics
    FOR SELECT USING (true);

-- –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å –ø–æ–¥—Ç–µ–º—ã
CREATE POLICY "Admins can manage subtopics" ON public.subtopics
    FOR ALL USING (
        EXISTS (
            SELECT 1 FROM public.users 
            WHERE id = auth.uid() AND role = 'admin'
        )
    );

-- –ü–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è user_progress
CREATE POLICY "Users can view own progress" ON public.user_progress
    FOR SELECT USING (auth.uid() = user_id);

CREATE POLICY "Users can manage own progress" ON public.user_progress
    FOR ALL USING (auth.uid() = user_id);

-- –ü–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è user_favorites
CREATE POLICY "Users can view own favorites" ON public.user_favorites
    FOR SELECT USING (auth.uid() = user_id);

CREATE POLICY "Users can manage own favorites" ON public.user_favorites
    FOR ALL USING (auth.uid() = user_id);

-- 8. –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
CREATE OR REPLACE FUNCTION public.handle_new_user()
RETURNS TRIGGER AS $$
BEGIN
    INSERT INTO public.users (id, email, full_name, role)
    VALUES (
        NEW.id,
        NEW.email,
        COALESCE(NEW.raw_user_meta_data->>'full_name', ''),
        'user'
    );
    RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- 9. –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
DROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;
CREATE TRIGGER on_auth_user_created
    AFTER INSERT ON auth.users
    FOR EACH ROW EXECUTE FUNCTION public.handle_new_user();

-- 10. –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
CREATE OR REPLACE FUNCTION public.make_admin(user_email TEXT)
RETURNS JSON AS $$
DECLARE
    user_id UUID;
    result JSON;
BEGIN
    -- –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email
    SELECT id INTO user_id FROM auth.users WHERE email = user_email;
    
    IF user_id IS NULL THEN
        RETURN json_build_object('success', false, 'message', 'User not found');
    END IF;
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –Ω–∞ –∞–¥–º–∏–Ω
    UPDATE public.users 
    SET role = 'admin'
    WHERE id = user_id;
    
    RETURN json_build_object('success', true, 'message', 'User promoted to admin');
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- 11. –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
INSERT INTO public.topics (title, description, icon, color, order_index) VALUES
('–û—Å–Ω–æ–≤—ã –ò–ò', '–í–≤–µ–¥–µ–Ω–∏–µ –≤ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç', 'üß†', '#3B82F6', 1),
('–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ', '–ê–ª–≥–æ—Ä–∏—Ç–º—ã –∏ –º–æ–¥–µ–ª–∏ ML', 'ü§ñ', '#10B981', 2),
('–ù–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏', '–ì–ª—É–±–æ–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏', 'üîó', '#8B5CF6', 3),
('–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö', '–†–∞–±–æ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –ò–ò', 'üìä', '#F59E0B', 4);

-- 12. –°–æ–∑–¥–∞–µ–º –ø–æ–¥—Ç–µ–º—ã –¥–ª—è –ø–µ—Ä–≤–æ–π —Ç–µ–º—ã
INSERT INTO public.subtopics (topic_id, title, content, order_index) VALUES
((SELECT id FROM public.topics WHERE title = '–û—Å–Ω–æ–≤—ã –ò–ò' LIMIT 1), 
 '–ß—Ç–æ —Ç–∞–∫–æ–µ –ò–ò?', '–í–≤–µ–¥–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞', 1),
((SELECT id FROM public.topics WHERE title = '–û—Å–Ω–æ–≤—ã –ò–ò' LIMIT 1), 
 '–ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≤–∏—Ç–∏—è –ò–ò', '–û—Ç –ø–µ—Ä–≤—ã—Ö –∏–¥–µ–π –¥–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π', 2),
((SELECT id FROM public.topics WHERE title = '–û—Å–Ω–æ–≤—ã –ò–ò' LIMIT 1), 
 '–¢–∏–ø—ã –ò–ò', '–£–∑–∫–∏–π, –æ–±—â–∏–π –∏ —Å–≤–µ—Ä—Ö–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç', 3);

-- 13. –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ email –Ω–∞ –≤–∞—à)
-- –í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Supabase Auth:
-- SELECT public.make_admin('–≤–∞—à-email@example.com');
